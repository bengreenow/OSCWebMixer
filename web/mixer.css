/*
	1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
	2. Remove default margin
*/
* {
  margin: 0;
}

/*
	3. Allow percentage-based heights in the application
*/
html,
body {
  min-height: 100%;
}

/*
	Typographic tweaks!
	4. Add accessible line-height
	5. Improve text rendering
	6. Remove the margin in all browsers
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  margin: 0;
}

/*
	8. Remove built-in form typography styles
*/
input,
button,
select {
  font: inherit;
}

.fullscreen {
  overflow: auto;
  background: rgba(0, 0, 0, 0.5);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  z-index: 10;
  grid-row: 1/ 3;
  grid-column: 1;
}

html {
  /* Remove overlay highlight when user taps slider on iOS */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  background: #000;
  color: #fff;
  font-family: sans-serif;

  /*
	Disable body scrolling
	*/
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;

  grid-template-rows: calc(env(safe-area-inset-top) + 44px) auto;
  grid-template-columns: 100%;
}

#mix {
  grid-row: 1;
  grid-column: 1;
  background: rgb(var(--tint, "6, 106, 166"));
  color: #fff;
  text-align: center;
  padding: env(safe-area-inset-top) env(safe-area-inset-right) 0;
  height: calc(env(safe-area-inset-top) + 44px);
  position: sticky;
  top: 0;
  z-index: 10;
  display: flex;
  justify-content: space-between;
  user-select: none;
}

#mix > div {
  display: flex;
  align-items: stretch;
  width: 44px;
  height: 44px;
}

label.starCheckbox {
  position: relative;
}

label.starCheckbox input {
  width: 44px;
  height: 44px;
  margin: 0;
  border: 0;
  cursor: pointer;
}

label.starCheckbox input:checked {
  background: transparent;
}

label.starCheckbox input:after {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  justify-content: flex-end;
  background: url("images/star.svg") center no-repeat;
  background-size: 30px;
}

label.starCheckbox input:checked:after {
  background-image: url("images/star-fill.svg");
}

#mix > div > label {
  display: flex;
  align-items: center;
  padding-left: 10px;
  padding-right: 10px;
}

body {
  display: grid;
}

#channelsWrap {
  padding: 0 env(safe-area-inset-right) env(safe-area-inset-bottom)
    env(safe-area-inset-left);
  grid-row: 2;
  grid-column: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  position: relative;
  display: grid;
}

#channels {
  padding-top: 10px;
}

#channels > div {
  display: flex;
  align-items: flex-end;
}

.favourite {
  display: flex;
  align-items: center;
  width: 44px;
  margin-bottom: 10px;
  background: rgba(var(--tint, "6, 106, 166"), 0.2);
}

body.favourites .favourite {
  display: none;
}

input[type="range"] {
  width: calc(100% + 10px);
  height: 44px;
  background: rgba(var(--tint, "6, 106, 166"), 0.4);
  min-height: 44px;
  border-radius: 0;
  margin: 2px -5px 0;
  border: 0;
  display: block;

  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;

  /*disable tap on range bar*/
  pointer-events: none;
}

input[type="range"]::-moz-range-thumb {
  background-color: #fff;
  border: none;
  width: 44px;
  height: 44px;
  border-radius: 0;
  cursor: pointer;
  box-shadow:
    0 0 0 #000000,
    0 0 0 #0d0d0d;

  /*allow tap events on thumb*/
  pointer-events: auto;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  background-color: #fff;
  border: none;
  width: 44px;
  height: 44px;
  border-radius: 0;
  cursor: pointer;

  box-shadow:
    0 0 0 #000000,
    0 0 0 #0d0d0d;

  /*allow tap events on thumb */
  pointer-events: auto;

  /*
	This prevents a draw issue on the range sliders.
	This seems to have fixed it for iOS15
	*/
  -webkit-transform: translate3d(0, 0, 0);
}

label.volume,
label.pan {
  padding: 0 5px;
  width: 100%;
  position: relative;
  margin-bottom: 10px;
  user-select: none;

  /*
	This prevents a draw issue on the range sliders.
	This seems to have fixed it for iOS15
	*/
  -webkit-transform: translate3d(0, 0, 0);
}

label.volume:after {
  content: "";
  height: 44px;
  background: #fff;
  position: absolute;
  left: 0;
  bottom: 0;
  width: calc(var(--value));
  z-index: -1;
}

label.pan:after {
  content: "";
  height: 44px;
  width: 44px;
  background: #fff;
  position: absolute;
  right: 50%;
  bottom: 0;
  width: calc((var(--value) * -1) / 2);
  z-index: -1;
}

label.pan:before {
  content: "";
  height: 44px;
  background: rgba(255, 255, 255, 1);
  position: absolute;
  left: 50%;
  bottom: 0;
  width: calc(var(--value) / 2);
  z-index: -1;
}
.favourites label.pan:before {
  right: 50vw;
}

#loader,
#loader:after {
  border-radius: 50%;
  width: 10em;
  height: 10em;
}
#overlay {
  display: none;
}
#loader {
  font-size: 10px;
  top: 50%;
  left: 50%;
  margin-top: -5em;
  margin-left: -5em;
  overflow: hidden;
  position: fixed;
  text-indent: -9999em;
  border: 1.1em solid rgba(255, 255, 255, 0.2);
  border-left: 1.1em solid #ffffff;
  animation: load8 1.1s infinite linear;
  z-index: 999;
  display: none;
}
@keyframes load8 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

body.disconnected {
  overflow: hidden;
}

body.disconnected #loader {
  display: block;
}

body.disconnected #overlay {
  display: block;
}

body.disconnected #channelsWrap {
  pointer-events: none;
  overflow: hidden;
}

html,
body {
  overflow: hidden;
}

select {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  color: #fff;
  padding: 0;
  border: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

.selectLabel {
  position: relative;
  display: flex;
  margin: 5px auto;
  border: 1px solid rgba(255, 255, 255, 0.8);
  align-items: center;
  border-radius: 5px;
}

.selectLabel span {
  padding: 0 30px 0 8px;
}

.selectLabel:after {
  content: "";
  border: 2px solid #fff;
  border-left: 0;
  border-top: 0;
  width: 10px;
  height: 10px;
  position: absolute;
  top: 9px;
  right: 11px;
  transform: rotate(45deg);
  pointer-events: none;
}

select option {
  color: #000;
}

input[type="checkbox"] {
  border: 2px solid #fff;
  background: transparent;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  margin-right: 5px;
  border-radius: 0;
}

input[type="checkbox"]:checked {
  background: #fff;
}

label.pan {
  display: none;
}
.panning label.pan {
  display: block;
}
.panning label.volume {
  display: none;
}
.panning #channels {
  background: linear-gradient(90deg, rgba(80, 80, 80) 2px, transparent 2px);
  background-position: calc(50% - 22px) 0;
  background-repeat: repeat-y;
  background-size: 2px;
}

.panning.favourites #channels {
  background-position: calc(50%) 0;
}

#auxiliaries {
  padding: max(calc(20px + env(safe-area-inset-top)), 40px) 40px 20px;
  display: none;
  text-align: center;
  flex-direction: column;
  gap: 10px;
}

.auxPicker #auxiliaries {
  display: flex;
}

#auxiliaries button {
  display: inline-block;
  color: #fff;
  width: 100%;
  cursor: pointer;
  padding: 20px;
  border-radius: 0;
  border: 0;
  max-width: 400px;
  background: rgb(var(--tint, "6, 106, 166"));
  margin-left: auto;
  margin-right: auto;
  position: relative;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  font-weight: bold;
}

#auxiliaries button:after {
  content: "";
  position: absolute;
  top: 3px;
  left: 3px;
  width: calc(100% - 6px);
  height: calc(100% - 6px);
  border: 1px solid rgba(255, 255, 255, 0.5);
}

#auxiliaries button:first-child {
  margin-top: auto;
}

#auxiliaries button:last-child {
  margin-bottom: auto;
}
